import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(15.h),
          ),
          shadowColor: appTheme.indigo3003f,
          elevation: 10,
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.black90001,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(7.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.blue700,
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray300,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.black90001,
          fontSize: 16.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray600,
          fontSize: 14.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 12.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.black90001,
          fontSize: 43.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w700,
        ),
        displaySmall: TextStyle(
          color: appTheme.black90001,
          fontSize: 36.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 24.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 13.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 10.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w500,
        ),
        labelSmall: TextStyle(
          color: appTheme.black90001,
          fontSize: 8.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.black90001,
          fontSize: 20.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.black90001,
          fontSize: 16.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray600,
          fontSize: 15.fSize,
          fontFamily: 'Kumbh Sans',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF5668FF),
    primaryContainer: Color(0XFF1A1E25),
    secondaryContainer: Color(0XFF767177),

    // Error colors
    errorContainer: Color(0XFF334A66),
    onError: Color(0X335668FF),
    onErrorContainer: Color(0XFF060518),

    // On colors(text colors)
    onPrimary: Color(0XFF110C26),
    onPrimaryContainer: Color(0X7FB2B2B2),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000D07);
  Color get black90001 => Color(0XFF000000);

  // Blue
  Color get blue700 => Color(0XFF0063D8);
  Color get blueA400 => Color(0XFF1977F3);

  // BlueGray
  Color get blueGray100 => Color(0XFFD2CFD6);
  Color get blueGray10001 => Color(0XFFD0D0D0);
  Color get blueGray10002 => Color(0XFFD1CFCF);
  Color get blueGray10003 => Color(0XFFD9D9D9);
  Color get blueGray400 => Color(0XFF7988A3);
  Color get blueGray40001 => Color(0XFF848688);
  Color get blueGray40099 => Color(0X998193AE);
  Color get blueGray800 => Color(0XFF2C3550);
  Color get blueGray80001 => Color(0XFF3C3E56);
  Color get blueGray80002 => Color(0XFF37364A);

  // BlueGrayf
  Color get blueGray1003f => Color(0X3FD2D4E2);
  Color get blueGray9000f => Color(0X0F323247);

  // Cyan
  Color get cyanA400 => Color(0XFF00F8FF);

  // Gray
  Color get gray100 => Color(0XFFF2F7FA);
  Color get gray10001 => Color(0XFFF6F6F6);
  Color get gray10002 => Color(0XFFF1F2FF);
  Color get gray10003 => Color(0XFFF5F3FD);
  Color get gray10004 => Color(0XFFF5F5F5);
  Color get gray200 => Color(0XFFEFEFEF);
  Color get gray20001 => Color(0XFFE8E8E8);
  Color get gray300 => Color(0XFFE4DFDF);
  Color get gray30001 => Color(0XFFDADADA);
  Color get gray30002 => Color(0XFFE4DEDE);
  Color get gray30003 => Color(0XFFE5E5E5);
  Color get gray30004 => Color(0XFFE3E3E3);
  Color get gray400 => Color(0XFFBFBFBF);
  Color get gray40001 => Color(0XFFC9C9C9);
  Color get gray40002 => Color(0XFFC4C4C4);
  Color get gray40003 => Color(0XFFB1B1B3);
  Color get gray50 => Color(0XFFF8F8F8);
  Color get gray500 => Color(0XFF999696);
  Color get gray50001 => Color(0XFF9E9E9E);
  Color get gray50002 => Color(0XFFA69D9D);
  Color get gray50003 => Color(0XFF999999);
  Color get gray50004 => Color(0XFF999797);
  Color get gray50005 => Color(0XFF979797);
  Color get gray50006 => Color(0XFF9C9A9A);
  Color get gray50007 => Color(0XFF9D9898);
  Color get gray600 => Color(0XFF747688);
  Color get gray60001 => Color(0XFF757575);
  Color get gray60002 => Color(0XFF7F7979);
  Color get gray60003 => Color(0XFF797C7A);
  Color get gray60004 => Color(0XFF797C7B);
  Color get gray60005 => Color(0XFF7D7F88);
  Color get gray700 => Color(0XFF626262);
  Color get gray70001 => Color(0XFF5B555C);
  Color get gray800 => Color(0XFF3F434A);
  Color get gray80075 => Color(0X753B3B3B);
  Color get gray900 => Color(0XFF222222);

  // Grayc
  Color get gray3004c => Color(0X4CE4E4E4);

  // GrayCc
  Color get gray900Cc => Color(0XCC0F172A);

  // GrayDd
  Color get gray900Dd => Color(0XDD141C29);

  // Green
  Color get green300 => Color(0XFF5BD98C);
  Color get greenA400 => Color(0XFF0FE16D);

  // Indigo
  Color get indigo20021 => Color(0X219CB1D5);
  Color get indigo50 => Color(0XFFE2E5FF);
  Color get indigoA100 => Color(0XFF7483FF);
  Color get indigoA200 => Color(0XFF5A61FF);
  Color get indigoA20001 => Color(0XFF6979F8);
  Color get indigoA20026 => Color(0X265568FF);
  Color get indigoA400 => Color(0XFF3D55F0);
  Color get indigoA40001 => Color(0XFF3C4FDF);
  Color get indigoA40002 => Color(0XFF3D50DF);

  // Indigof
  Color get indigo3003f => Color(0X3F6F7DC8);

  // LightBluec
  Color get lightBlue4004c => Color(0X4C19C3FB);

  // LightBlue
  Color get lightBlue800 => Color(0XFF0070C1);

  // Pink
  Color get pink300 => Color(0XFFEE6B8D);

  // Red
  Color get red600 => Color(0XFFE43E2B);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellowA700 => Color(0XFFFFD401);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();

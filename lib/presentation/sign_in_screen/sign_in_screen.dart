import 'bloc/sign_in_bloc.dart';import 'models/sign_in_model.dart';import 'package:flutter/material.dart';import 'package:sanjay_s_application2/core/app_export.dart';import 'package:sanjay_s_application2/core/utils/validation_functions.dart';import 'package:sanjay_s_application2/widgets/custom_elevated_button.dart';import 'package:sanjay_s_application2/widgets/custom_icon_button.dart';import 'package:sanjay_s_application2/widgets/custom_switch.dart';import 'package:sanjay_s_application2/widgets/custom_text_form_field.dart';import 'package:sanjay_s_application2/domain/googleauth/google_auth_helper.dart';import 'package:sanjay_s_application2/domain/facebookauth/facebook_auth_helper.dart';
// ignore_for_file: must_be_immutable
class SignInScreen extends StatelessWidget {SignInScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<SignInBloc>(create: (context) => SignInBloc(SignInState(signInModelObj: SignInModel()))..add(SignInInitialEvent()), child: SignInScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: Form(key: _formKey, child: SizedBox(width: double.maxFinite, child: SingleChildScrollView(child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [_buildEventMantraSection(context), SizedBox(height: 18.v), Padding(padding: EdgeInsets.only(left: 32.h), child: Row(children: [CustomImageView(imagePath: ImageConstant.imgG430, height: 1.adaptSize, width: 1.adaptSize), CustomImageView(imagePath: ImageConstant.imgPath534, height: 1.adaptSize, width: 1.adaptSize)])), SizedBox(height: 14.v), Padding(padding: EdgeInsets.only(left: 28.h), child: Text("lbl_sign_in".tr, style: CustomTextStyles.headlineSmallMedium)), SizedBox(height: 47.v), Padding(padding: EdgeInsets.only(left: 28.h, right: 30.h), child: BlocSelector<SignInBloc, SignInState, TextEditingController?>(selector: (state) => state.mobileNumberController, builder: (context, mobileNumberController) {return CustomTextFormField(controller: mobileNumberController, hintText: "lbl_mobile_number".tr, textInputAction: TextInputAction.done, textInputType: TextInputType.phone, alignment: Alignment.center, prefix: Container(margin: EdgeInsets.fromLTRB(16.h, 17.v, 13.h, 17.v), child: CustomImageView(imagePath: ImageConstant.imgCall, height: 22.adaptSize, width: 22.adaptSize)), prefixConstraints: BoxConstraints(maxHeight: 56.v), validator: (value) {if (!isValidPhone(value)) {return "err_msg_please_enter_valid_phone_number".tr;} return null;}, contentPadding: EdgeInsets.only(top: 19.v, right: 30.h, bottom: 19.v), borderDecoration: TextFormFieldStyleHelper.outlineGrayTL12, fillColor: appTheme.whiteA700);})), SizedBox(height: 68.v), _buildRememberMeSection(context), SizedBox(height: 36.v), SizedBox(width: double.maxFinite, child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Expanded(child: Column(children: [Align(alignment: Alignment.centerRight, child: Container(height: 58.v, width: 271.h, margin: EdgeInsets.only(right: 2.h), child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.center, child: GestureDetector(onTap: () {onTapArrowLeft(context);}, child: Container(height: 58.v, width: 271.h, padding: EdgeInsets.all(14.h), decoration: AppDecoration.outlineIndigoF.copyWith(borderRadius: BorderRadiusStyle.roundedBorder16), child: CustomIconButton(height: 30.adaptSize, width: 30.adaptSize, padding: EdgeInsets.all(8.h), decoration: IconButtonStyleHelper.fillIndigoA, alignment: Alignment.centerRight, child: CustomImageView(imagePath: ImageConstant.imgArrowLeft))))), Align(alignment: Alignment.center, child: Text("lbl_sign_in".tr.toUpperCase(), style: CustomTextStyles.titleMediumWhiteA700))]))), SizedBox(height: 31.v), _buildLoginWithGoogleSection(context)])), Opacity(opacity: 0.5, child: CustomImageView(imagePath: ImageConstant.imgEllipse70322x44, height: 322.v, width: 44.h, margin: EdgeInsets.only(left: 6.h, top: 36.v, bottom: 80.v)))]))])))))); } 
/// Section Widget
Widget _buildEventMantraSection(BuildContext context) { return SizedBox(height: 141.v, width: double.maxFinite, child: Stack(alignment: Alignment.topRight, children: [Opacity(opacity: 0.5, child: CustomImageView(imagePath: ImageConstant.imgEllipse66, height: 129.v, width: 135.h, alignment: Alignment.topLeft)), Opacity(opacity: 0.7, child: CustomImageView(imagePath: ImageConstant.imgEllipse6990x177, height: 90.v, width: 177.h, alignment: Alignment.topRight)), Align(alignment: Alignment.bottomCenter, child: Padding(padding: EdgeInsets.only(left: 91.h, right: 73.h), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgGroup, height: 58.v, width: 55.h, margin: EdgeInsets.only(left: 68.h)), SizedBox(height: 10.v), Text("lbl_eventmantra".tr, style: CustomTextStyles.displaySmallBluegray80002)])))])); } 
/// Section Widget
Widget _buildRememberMeSection(BuildContext context) { return Align(alignment: Alignment.center, child: Padding(padding: EdgeInsets.symmetric(horizontal: 29.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [BlocSelector<SignInBloc, SignInState, bool?>(selector: (state) => state.isSelectedSwitch, builder: (context, isSelectedSwitch) {return CustomSwitch(value: isSelectedSwitch, onChange: (value) {context.read<SignInBloc>().add(ChangeSwitchEvent(value: value));});}), Padding(padding: EdgeInsets.only(left: 6.h), child: Text("lbl_remember_me".tr, style: CustomTextStyles.bodyMediumOnPrimary_1)), Spacer(), Padding(padding: EdgeInsets.only(top: 2.v), child: Text("msg_forgot_password".tr, style: CustomTextStyles.bodyMediumOnPrimary_1))]))); } 
/// Section Widget
Widget _buildLoginWithGoogleSection(BuildContext context) { return SizedBox(height: 349.v, width: 325.h, child: Stack(alignment: Alignment.topRight, children: [Opacity(opacity: 0.4, child: CustomImageView(imagePath: ImageConstant.imgEllipse71173x82, height: 173.v, width: 82.h, alignment: Alignment.bottomLeft)), Align(alignment: Alignment.topRight, child: Column(mainAxisSize: MainAxisSize.min, children: [Text("lbl_or".tr, style: CustomTextStyles.titleMediumGray50007), SizedBox(height: 11.v), CustomElevatedButton(height: 56.v, text: "msg_login_with_google".tr, margin: EdgeInsets.symmetric(horizontal: 1.h), leftIcon: Container(margin: EdgeInsets.only(right: 19.h), child: CustomImageView(imagePath: ImageConstant.imgGoogle, height: 26.adaptSize, width: 26.adaptSize)), buttonStyle: CustomButtonStyles.outlineBlueGrayF, buttonTextStyle: CustomTextStyles.bodyLargeOnPrimary, onPressed: () {onTapLoginWithGoogle(context);}), SizedBox(height: 17.v), CustomElevatedButton(height: 56.v, text: "msg_login_with_facebook".tr, leftIcon: Container(margin: EdgeInsets.only(right: 19.h), child: CustomImageView(imagePath: ImageConstant.imgFacebook, height: 30.adaptSize, width: 30.adaptSize)), buttonStyle: CustomButtonStyles.outlineBlueGrayF, buttonTextStyle: CustomTextStyles.bodyLargeOnPrimary, onPressed: () {onTapLoginWithFacebook(context);}), SizedBox(height: 24.v), RichText(text: TextSpan(children: [TextSpan(text: "msg_don_t_have_an_account2".tr, style: CustomTextStyles.bodyMediumOnPrimary15), TextSpan(text: "lbl_sign_up".tr, style: CustomTextStyles.bodyMediumPrimary)]), textAlign: TextAlign.left)]))])); } 
/// Navigates to the signUpScreen when the action is triggered.
onTapArrowLeft(BuildContext context) { NavigatorService.pushNamed(AppRoutes.signUpScreen, ); } 
onTapLoginWithGoogle(BuildContext context) async  {         await GoogleAuthHelper().googleSignInProcess().then((googleUser) {
          if(googleUser!=null){
            //TODO Actions to be performed after signin
          } else {
            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('user data is empty')));
          }
        }).catchError((onError) {
            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(onError.toString())));
        });
         } 
onTapLoginWithFacebook(BuildContext context) async  {             await FacebookAuthHelper().facebookSignInProcess().then((facebookUser) {
              //TODO Actions to be performed after signin
              }).catchError((onError) {
              ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(onError.toString())));
            });
             } 
 }

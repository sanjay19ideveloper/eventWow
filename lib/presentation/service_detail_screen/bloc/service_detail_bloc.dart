import 'package:equatable/equatable.dart';import 'package:flutter/material.dart';import '/core/app_export.dart';import '../models/userprofilegrid1_item_model.dart';import '../models/subtractgrid1_item_model.dart';import 'package:table_calendar/table_calendar.dart';import '../models/userprofile12_item_model.dart';import '../models/userprofile13_item_model.dart';import 'package:sanjay_s_application2/presentation/service_detail_screen/models/service_detail_model.dart';part 'service_detail_event.dart';part 'service_detail_state.dart';/// A bloc that manages the state of a ServiceDetail according to the event that is dispatched to it.
class ServiceDetailBloc extends Bloc<ServiceDetailEvent, ServiceDetailState> {ServiceDetailBloc(ServiceDetailState initialState) : super(initialState) { on<ServiceDetailInitialEvent>(_onInitialize); }

List<Userprofilegrid1ItemModel> fillUserprofilegrid1ItemList() { return [Userprofilegrid1ItemModel(userText: "110", decorationText: "Decoration"), Userprofilegrid1ItemModel(userText: "110", decorationText: "Decoration")]; } 
List<Subtractgrid1ItemModel> fillSubtractgrid1ItemList() { return List.generate(4, (index) => Subtractgrid1ItemModel()); } 
List<Userprofile12ItemModel> fillUserprofile12ItemList() { return [Userprofile12ItemModel(username: "John K.", timeAgo: "10 months ago", loremText: "Lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsumipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsumipsum lorem ipsum lorem")]; } 
List<Userprofile13ItemModel> fillUserprofile13ItemList() { return [Userprofile13ItemModel(userText1: "Lorem ipsum studio", userText2: "MG Road", userText3: "4.5 (132)", userText4: "₹ 60,000", userText5: "per day", userText6: "Decoration, Photographer", userText7: "Decoration, Photographer"), Userprofile13ItemModel(userText1: "Lorem ipsum studio", userText2: "MG Road", userText3: "4.5 (132)", userText4: "₹ 60,000", userText5: "per day")]; } 
_onInitialize(ServiceDetailInitialEvent event, Emitter<ServiceDetailState> emit, ) async  { emit(state.copyWith(rangeSelectionMode: RangeSelectionMode.toggledOn)); emit(state.copyWith(serviceDetailModelObj: state.serviceDetailModelObj?.copyWith(userprofilegrid1ItemList: fillUserprofilegrid1ItemList(), subtractgrid1ItemList: fillSubtractgrid1ItemList(), userprofile12ItemList: fillUserprofile12ItemList(), userprofile13ItemList: fillUserprofile13ItemList()))); } 
 }

import 'bloc/add_adresss_bloc.dart';import 'models/add_adresss_model.dart';import 'package:flutter/material.dart';import 'package:sanjay_s_application2/core/app_export.dart';import 'package:sanjay_s_application2/core/utils/validation_functions.dart';import 'package:sanjay_s_application2/presentation/all_cities_photographer_page/all_cities_photographer_page.dart';import 'package:sanjay_s_application2/widgets/app_bar/appbar_leading_image.dart';import 'package:sanjay_s_application2/widgets/app_bar/appbar_subtitle.dart';import 'package:sanjay_s_application2/widgets/app_bar/custom_app_bar.dart';import 'package:sanjay_s_application2/widgets/custom_bottom_bar.dart';import 'package:sanjay_s_application2/widgets/custom_icon_button.dart';import 'package:sanjay_s_application2/widgets/custom_text_form_field.dart';import 'package:sanjay_s_application2/presentation/location_succesfully_added_dialog/location_succesfully_added_dialog.dart';
// ignore_for_file: must_be_immutable
class AddAdresssScreen extends StatelessWidget {AddAdresssScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<AddAdresssBloc>(create: (context) => AddAdresssBloc(AddAdresssState(addAdresssModelObj: AddAdresssModel()))..add(AddAdresssInitialEvent()), child: AddAdresssScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Form(key: _formKey, child: SizedBox(width: double.maxFinite, child: Column(children: [SizedBox(height: 46.v), Expanded(child: SingleChildScrollView(child: Padding(padding: EdgeInsets.symmetric(horizontal: 21.h), child: Column(children: [_buildAddress(context), SizedBox(height: 21.v), _buildLocalityTownValue(context), SizedBox(height: 21.v), _buildCity(context), SizedBox(height: 21.v), _buildPincodeRow(context), SizedBox(height: 258.v), SizedBox(height: 58.v, width: 271.h, child: Stack(alignment: Alignment.centerLeft, children: [Align(alignment: Alignment.center, child: GestureDetector(onTap: () {onTapArrowLeft(context);}, child: Container(height: 58.v, width: 271.h, padding: EdgeInsets.all(14.h), decoration: AppDecoration.outlineIndigoF.copyWith(borderRadius: BorderRadiusStyle.roundedBorder16), child: CustomIconButton(height: 30.adaptSize, width: 30.adaptSize, padding: EdgeInsets.all(8.h), decoration: IconButtonStyleHelper.fillIndigoA, alignment: Alignment.centerRight, child: CustomImageView(imagePath: ImageConstant.imgArrowLeft))))), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 59.h), child: Text("lbl_add_address2".tr.toUpperCase(), style: CustomTextStyles.titleMediumWhiteA700)))])), SizedBox(height: 376.v), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 33.h), child: Row(children: [Text("lbl_50_000".tr, style: CustomTextStyles.titleSmallPrimary), Padding(padding: EdgeInsets.only(left: 4.h, top: 5.v, bottom: 5.v), child: Text("lbl_per_day".tr, style: CustomTextStyles.kumbhSansBlack90001Medium))])))]))))]))), bottomNavigationBar: _buildBottomBar(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 40.v, leadingWidth: 46.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrowDown, margin: EdgeInsets.only(left: 24.h, top: 9.v, bottom: 9.v)), title: AppbarSubtitle(text: "lbl_add_address".tr, margin: EdgeInsets.only(left: 11.h))); } 
/// Section Widget
Widget _buildAddress(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 6.h), child: BlocSelector<AddAdresssBloc, AddAdresssState, TextEditingController?>(selector: (state) => state.addressController, builder: (context, addressController) {return CustomTextFormField(controller: addressController, hintText: "msg_address_house_no".tr, hintStyle: CustomTextStyles.bodyMediumCenturyGothicGray50002, borderDecoration: TextFormFieldStyleHelper.outlineGray, filled: false);})); } 
/// Section Widget
Widget _buildLocalityTownValue(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 6.h), child: BlocSelector<AddAdresssBloc, AddAdresssState, TextEditingController?>(selector: (state) => state.localityTownValueController, builder: (context, localityTownValueController) {return CustomTextFormField(controller: localityTownValueController, hintText: "msg_locality_town".tr, hintStyle: CustomTextStyles.bodySmallCenturyGothicGray50002, borderDecoration: TextFormFieldStyleHelper.outlineGray, filled: false);})); } 
/// Section Widget
Widget _buildCity(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 6.h), child: BlocSelector<AddAdresssBloc, AddAdresssState, TextEditingController?>(selector: (state) => state.cityController, builder: (context, cityController) {return CustomTextFormField(controller: cityController, hintText: "lbl_city_district".tr, hintStyle: CustomTextStyles.bodySmallCenturyGothicGray50002, borderDecoration: TextFormFieldStyleHelper.outlineGray, filled: false);})); } 
/// Section Widget
Widget _buildPincode(BuildContext context) { return Padding(padding: EdgeInsets.only(top: 1.v), child: BlocSelector<AddAdresssBloc, AddAdresssState, TextEditingController?>(selector: (state) => state.pincodeController, builder: (context, pincodeController) {return CustomTextFormField(width: 156.h, controller: pincodeController, hintText: "lbl_pincode".tr, hintStyle: CustomTextStyles.bodyMediumCenturyGothicGray50002, textInputType: TextInputType.number, validator: (value) {if (!isNumeric(value)) {return "err_msg_please_enter_valid_number".tr;} return null;}, borderDecoration: TextFormFieldStyleHelper.outlineGray, filled: false);})); } 
/// Section Widget
Widget _buildStateValue(BuildContext context) { return BlocSelector<AddAdresssBloc, AddAdresssState, TextEditingController?>(selector: (state) => state.stateValueController, builder: (context, stateValueController) {return CustomTextFormField(width: 163.h, controller: stateValueController, hintText: "lbl_state".tr, hintStyle: CustomTextStyles.bodyMediumCenturyGothicGray50002, textInputAction: TextInputAction.done, borderDecoration: TextFormFieldStyleHelper.outlineGray, filled: false);}); } 
/// Section Widget
Widget _buildPincodeRow(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 6.h), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [_buildPincode(context), _buildStateValue(context)])); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Homepage: return AppRoutes.allCitiesPhotographerPage; case BottomBarEnum.Vendor: return "/"; case BottomBarEnum.Einvites: return "/"; case BottomBarEnum.Wishlist: return "/"; case BottomBarEnum.Checklist: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.allCitiesPhotographerPage: return AllCitiesPhotographerPage(); default: return DefaultWidget();} } 

/// Displays a dialog with the [LocationSuccesfullyAddedDialog] content.
onTapArrowLeft(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: LocationSuccesfullyAddedDialog.builder(context),backgroundColor: Colors.transparent, contentPadding: EdgeInsets.zero, insetPadding: const EdgeInsets.only(left: 0),)); } 
 }

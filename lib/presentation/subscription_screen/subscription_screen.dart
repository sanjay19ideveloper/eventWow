import '../subscription_screen/widgets/userprofile3_item_widget.dart';import 'bloc/subscription_bloc.dart';import 'models/subscription_model.dart';import 'models/userprofile3_item_model.dart';import 'package:carousel_slider/carousel_slider.dart';import 'package:flutter/material.dart';import 'package:sanjay_s_application2/core/app_export.dart';import 'package:sanjay_s_application2/presentation/all_cities_photographer_page/all_cities_photographer_page.dart';import 'package:sanjay_s_application2/widgets/app_bar/appbar_leading_image.dart';import 'package:sanjay_s_application2/widgets/app_bar/appbar_subtitle.dart';import 'package:sanjay_s_application2/widgets/app_bar/custom_app_bar.dart';import 'package:sanjay_s_application2/widgets/custom_bottom_bar.dart';import 'package:sanjay_s_application2/widgets/custom_icon_button.dart';import 'package:sanjay_s_application2/widgets/custom_outlined_button.dart';import 'package:sanjay_s_application2/presentation/you_want_to_choose_dialog/you_want_to_choose_dialog.dart';
// ignore_for_file: must_be_immutable
class SubscriptionScreen extends StatelessWidget {SubscriptionScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<SubscriptionBloc>(create: (context) => SubscriptionBloc(SubscriptionState(subscriptionModelObj: SubscriptionModel()))..add(SubscriptionInitialEvent()), child: SubscriptionScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: SizedBox(width: double.maxFinite, child: Column(children: [SizedBox(height: 64.v), Expanded(child: SingleChildScrollView(child: Column(children: [_buildUserProfile(context), SizedBox(height: 130.v), Divider(color: appTheme.gray10004, indent: 22.h, endIndent: 21.h), SizedBox(height: 17.v), _buildFortyFive1(context), SizedBox(height: 10.v), Container(width: 336.h, margin: EdgeInsets.only(left: 22.h, right: 16.h), child: Text("msg_lorem_ipsum_lorem".tr, maxLines: null, overflow: TextOverflow.ellipsis, style: CustomTextStyles.bodySmallBlack900018_1))])))])), bottomNavigationBar: _buildBottomBar(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 49.v, leadingWidth: 46.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrowDown, margin: EdgeInsets.only(left: 24.h, top: 11.v, bottom: 16.v)), title: AppbarSubtitle(text: "lbl_subscription".tr, margin: EdgeInsets.only(left: 11.h))); } 
/// Section Widget
Widget _buildUserProfile(BuildContext context) { return BlocBuilder<SubscriptionBloc, SubscriptionState>(builder: (context, state) {return CarouselSlider.builder(options: CarouselOptions(height: 484.v, initialPage: 0, autoPlay: true, viewportFraction: 1.0, enableInfiniteScroll: false, scrollDirection: Axis.horizontal, onPageChanged: (index, reason) {state.sliderIndex = index;}), itemCount: state.subscriptionModelObj?.userprofile3ItemList.length ?? 0, itemBuilder: (context, index, realIndex) {Userprofile3ItemModel model = state.subscriptionModelObj?.userprofile3ItemList[index] ?? Userprofile3ItemModel(); return Userprofile3ItemWidget(model, onTapChooseButton: () {onTapChooseButton(context);});});}); } 
/// Section Widget
Widget _buildFortyFive(BuildContext context) { return CustomOutlinedButton(height: 14.v, width: 34.h, text: "lbl_4_5".tr, margin: EdgeInsets.only(left: 9.h, top: 9.v, bottom: 15.v), buttonTextStyle: theme.textTheme.labelSmall!); } 
/// Section Widget
Widget _buildFortyFive1(BuildContext context) { return Padding(padding: EdgeInsets.symmetric(horizontal: 22.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomIconButton(height: 40.adaptSize, width: 40.adaptSize, padding: EdgeInsets.all(8.h), decoration: IconButtonStyleHelper.outlineGray, child: CustomImageView(imagePath: ImageConstant.imgGroup150)), Padding(padding: EdgeInsets.only(left: 9.h, top: 8.v, bottom: 8.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_john_k".tr, style: CustomTextStyles.labelMediumBlack90001SemiBold), Text("lbl_10_months_ago".tr, style: CustomTextStyles.kumbhSansGray50005Regular)])), Spacer(), CustomImageView(imagePath: ImageConstant.imgSend, height: 11.adaptSize, width: 11.adaptSize, margin: EdgeInsets.only(top: 12.v, bottom: 15.v)), _buildFortyFive(context)])); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Homepage: return AppRoutes.allCitiesPhotographerPage; case BottomBarEnum.Vendor: return "/"; case BottomBarEnum.Einvites: return "/"; case BottomBarEnum.Wishlist: return "/"; case BottomBarEnum.Checklist: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.allCitiesPhotographerPage: return AllCitiesPhotographerPage(); default: return DefaultWidget();} } 

/// Displays a dialog with the [YouWantToChooseDialog] content.
onTapChooseButton(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: YouWantToChooseDialog.builder(context),backgroundColor: Colors.transparent, contentPadding: EdgeInsets.zero, insetPadding: const EdgeInsets.only(left: 0),)); } 
 }

import '../homepage_screen/widgets/banquettext_item_widget.dart';import '../homepage_screen/widgets/rectangle_item_widget.dart';import '../homepage_screen/widgets/rewindlist_item_widget.dart';import '../homepage_screen/widgets/userprofilelist1_item_widget.dart';import '../homepage_screen/widgets/widget_item_widget.dart';import 'bloc/homepage_bloc.dart';import 'models/banquettext_item_model.dart';import 'models/homepage_model.dart';import 'models/rectangle_item_model.dart';import 'models/rewindlist_item_model.dart';import 'models/userprofilelist1_item_model.dart';import 'models/widget_item_model.dart';import 'package:carousel_slider/carousel_slider.dart';import 'package:flutter/material.dart';import 'package:sanjay_s_application2/core/app_export.dart';import 'package:sanjay_s_application2/presentation/all_cities_photographer_page/all_cities_photographer_page.dart';import 'package:sanjay_s_application2/widgets/app_bar/appbar_leading_image.dart';import 'package:sanjay_s_application2/widgets/app_bar/appbar_subtitle_three.dart';import 'package:sanjay_s_application2/widgets/app_bar/appbar_subtitle_two.dart';import 'package:sanjay_s_application2/widgets/app_bar/appbar_title_image.dart';import 'package:sanjay_s_application2/widgets/app_bar/appbar_trailing_iconbutton.dart';import 'package:sanjay_s_application2/widgets/app_bar/custom_app_bar.dart';import 'package:sanjay_s_application2/widgets/custom_bottom_bar.dart';import 'package:smooth_page_indicator/smooth_page_indicator.dart';
// ignore_for_file: must_be_immutable
class HomepageScreen extends StatelessWidget {HomepageScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<HomepageBloc>(create: (context) => HomepageBloc(HomepageState(homepageModelObj: HomepageModel()))..add(HomepageInitialEvent()), child: HomepageScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: SizedBox(width: double.maxFinite, child: Column(children: [SizedBox(height: 22.v), Expanded(child: SingleChildScrollView(child: Padding(padding: EdgeInsets.only(left: 20.h), child: Column(children: [_buildRewindList(context), SizedBox(height: 18.v), _buildSliderColumn(context), SizedBox(height: 27.v), _buildCategoriesColumn(context), SizedBox(height: 33.v), Align(alignment: Alignment.centerLeft, child: GestureDetector(onTap: () {onTapTxtTopSellingServices(context);}, child: Text("msg_top_selling_services".tr, style: theme.textTheme.bodyLarge))), SizedBox(height: 5.v), _buildUserProfileList(context), SizedBox(height: 23.v), Align(alignment: Alignment.centerLeft, child: GestureDetector(onTap: () {onTapTxtTrendingToday(context);}, child: Text("lbl_trending_today".tr, style: theme.textTheme.bodyLarge))), SizedBox(height: 10.v), _buildHomepageStack(context)]))))])), bottomNavigationBar: _buildBottomBar(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 38.v, leadingWidth: 48.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgMegaphone, margin: EdgeInsets.only(left: 24.h, top: 9.v, bottom: 10.v), onTap: () {onTapMegaphone(context);}), centerTitle: true, title: Column(children: [Row(children: [AppbarSubtitleThree(text: "msg_current_location".tr), AppbarTitleImage(imagePath: ImageConstant.img, margin: EdgeInsets.only(left: 2.h, top: 4.v, bottom: 4.v))]), SizedBox(height: 3.v), AppbarSubtitleTwo(text: "lbl_new_yourk_usa".tr, margin: EdgeInsets.only(left: 2.h, right: 4.h))]), actions: [AppbarTrailingIconbutton(imagePath: ImageConstant.imgUserBlack90001, margin: EdgeInsets.symmetric(horizontal: 15.h, vertical: 1.v), onTap: () {onTapUser(context);})]); } 
/// Section Widget
Widget _buildRewindList(BuildContext context) { return Align(alignment: Alignment.centerLeft, child: SizedBox(height: 48.v, child: BlocSelector<HomepageBloc, HomepageState, HomepageModel?>(selector: (state) => state.homepageModelObj, builder: (context, homepageModelObj) {return ListView.separated(padding: EdgeInsets.only(left: 7.h, right: 24.h), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 21.h);}, itemCount: homepageModelObj?.rewindlistItemList.length ?? 0, itemBuilder: (context, index) {RewindlistItemModel model = homepageModelObj?.rewindlistItemList[index] ?? RewindlistItemModel(); return RewindlistItemWidget(model);});}))); } 
/// Section Widget
Widget _buildSliderColumn(BuildContext context) { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(right: 19.h), child: BlocBuilder<HomepageBloc, HomepageState>(builder: (context, state) {return CarouselSlider.builder(options: CarouselOptions(height: 177.v, initialPage: 0, autoPlay: true, viewportFraction: 1.0, enableInfiniteScroll: false, scrollDirection: Axis.horizontal, onPageChanged: (index, reason) {state.sliderIndex = index;}), itemCount: state.homepageModelObj?.widgetItemList.length ?? 0, itemBuilder: (context, index, realIndex) {WidgetItemModel model = state.homepageModelObj?.widgetItemList[index] ?? WidgetItemModel(); return WidgetItemWidget(model);});})), SizedBox(height: 9.v), BlocBuilder<HomepageBloc, HomepageState>(builder: (context, state) {return Container(height: 7.v, margin: EdgeInsets.only(left: 154.h), child: AnimatedSmoothIndicator(activeIndex: state.sliderIndex, count: state.homepageModelObj?.widgetItemList.length ?? 0, axisDirection: Axis.horizontal, effect: ScrollingDotsEffect(spacing: 4, activeDotColor: theme.colorScheme.primary, dotColor: appTheme.gray30001, dotHeight: 7.v, dotWidth: 7.h)));})]); } 
/// Section Widget
Widget _buildCategoriesColumn(BuildContext context) { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_categories".tr, style: theme.textTheme.bodyLarge), SizedBox(height: 16.v), Align(alignment: Alignment.center, child: Padding(padding: EdgeInsets.only(left: 16.h, right: 25.h), child: BlocSelector<HomepageBloc, HomepageState, HomepageModel?>(selector: (state) => state.homepageModelObj, builder: (context, homepageModelObj) {return GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: 60.v, crossAxisCount: 5, mainAxisSpacing: 24.h, crossAxisSpacing: 24.h), physics: NeverScrollableScrollPhysics(), itemCount: homepageModelObj?.banquettextItemList.length ?? 0, itemBuilder: (context, index) {BanquettextItemModel model = homepageModelObj?.banquettextItemList[index] ?? BanquettextItemModel(); return BanquettextItemWidget(model, onTapImgBanquetImage: () {onTapImgBanquetImage(context);});});})))]); } 
/// Section Widget
Widget _buildUserProfileList(BuildContext context) { return SizedBox(height: 163.v, child: BlocSelector<HomepageBloc, HomepageState, HomepageModel?>(selector: (state) => state.homepageModelObj, builder: (context, homepageModelObj) {return ListView.separated(scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 18.h);}, itemCount: homepageModelObj?.userprofilelist1ItemList.length ?? 0, itemBuilder: (context, index) {Userprofilelist1ItemModel model = homepageModelObj?.userprofilelist1ItemList[index] ?? Userprofilelist1ItemModel(); return Userprofilelist1ItemWidget(model);});})); } 
/// Section Widget
Widget _buildHomepageStack(BuildContext context) { return SizedBox(height: 158.v, width: 355.h, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.bottomRight, child: SingleChildScrollView(scrollDirection: Axis.horizontal, padding: EdgeInsets.only(left: 179.h, top: 79.v, bottom: 39.v), child: IntrinsicWidth(child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Row(children: [CustomImageView(imagePath: ImageConstant.imgStarSymbolIconYellowA700, height: 13.adaptSize, width: 13.adaptSize), CustomImageView(imagePath: ImageConstant.imgStarSymbolIconYellowA700, height: 13.adaptSize, width: 13.adaptSize, margin: EdgeInsets.only(left: 6.h)), CustomImageView(imagePath: ImageConstant.imgStarSymbolIconYellowA700, height: 13.adaptSize, width: 13.adaptSize, margin: EdgeInsets.only(left: 5.h)), CustomImageView(imagePath: ImageConstant.imgStarSymbolIconYellowA700, height: 13.adaptSize, width: 13.adaptSize, margin: EdgeInsets.only(left: 6.h)), CustomImageView(imagePath: ImageConstant.imgStarSymbolIconYellowA700, height: 13.adaptSize, width: 13.adaptSize, margin: EdgeInsets.only(left: 5.h)), Padding(padding: EdgeInsets.only(left: 6.h), child: Text("lbl_4_5".tr, style: theme.textTheme.labelMedium)), Spacer(), CustomImageView(imagePath: ImageConstant.imgStarSymbolIconYellowA700, height: 13.adaptSize, width: 13.adaptSize)]), SizedBox(height: 10.v), Text("lbl_photographer".tr, style: CustomTextStyles.labelLarge12)])))), Align(alignment: Alignment.center, child: SizedBox(height: 158.v, child: BlocSelector<HomepageBloc, HomepageState, HomepageModel?>(selector: (state) => state.homepageModelObj, builder: (context, homepageModelObj) {return ListView.separated(scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 1.h);}, itemCount: homepageModelObj?.rectangleItemList.length ?? 0, itemBuilder: (context, index) {RectangleItemModel model = homepageModelObj?.rectangleItemList[index] ?? RectangleItemModel(); return RectangleItemWidget(model);});})))])); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Homepage: return AppRoutes.allCitiesPhotographerPage; case BottomBarEnum.Vendor: return "/"; case BottomBarEnum.Einvites: return "/"; case BottomBarEnum.Wishlist: return "/"; case BottomBarEnum.Checklist: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.allCitiesPhotographerPage: return AllCitiesPhotographerPage(); default: return DefaultWidget();} } 
/// Navigates to the allCategoriesScreen when the action is triggered.
onTapImgBanquetImage(BuildContext context) { NavigatorService.pushNamed(AppRoutes.allCategoriesScreen); } 
/// Navigates to the humburgerScreen when the action is triggered.
onTapMegaphone(BuildContext context) { NavigatorService.pushNamed(AppRoutes.humburgerScreen, ); } 
/// Navigates to the notificationsOneScreen when the action is triggered.
onTapUser(BuildContext context) { NavigatorService.pushNamed(AppRoutes.notificationsOneScreen, ); } 
/// Navigates to the allTopSellingOneTabContainerScreen when the action is triggered.
onTapTxtTopSellingServices(BuildContext context) { NavigatorService.pushNamed(AppRoutes.allTopSellingOneTabContainerScreen, ); } 
/// Navigates to the allTopSellingScreen when the action is triggered.
onTapTxtTrendingToday(BuildContext context) { NavigatorService.pushNamed(AppRoutes.allTopSellingScreen, ); } 
 }
